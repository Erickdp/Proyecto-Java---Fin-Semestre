/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zoolomania.funcional.vista;

import com.zoolomania.funcional.control.CuidadorTrs;
import com.zoolomania.funcional.control.EspecieTrs;
import com.zoolomania.funcional.control.HabitatTrs;
import com.zoolomania.funcional.control.MyExcepcion;
import com.zoolomania.funcional.control.ZonaTrs;
import com.zoolomania.funcional.modelo.Cuidador;
import com.zoolomania.funcional.modelo.Especie;
import com.zoolomania.funcional.modelo.Habitat;
import com.zoolomania.funcional.modelo.Zona;
import java.time.LocalDateTime;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Erick Díaz
 */
public class frmEspecie extends javax.swing.JFrame {

    EspecieTrs etrs = new EspecieTrs();
    CuidadorTrs ctrs = new CuidadorTrs();
    HabitatTrs htrs = new HabitatTrs();
    ZonaTrs ztrs = new ZonaTrs();
    List<Especie> especies = (List<Especie>) etrs.listar();
    List<Cuidador> cuidadores = (List<Cuidador>) ctrs.listar();
    List<Habitat> habitats = (List<Habitat>) htrs.listar();
    List<Zona> zonas = (List<Zona>) ztrs.listar();
    List<Especie> especiesR;

    public void cargarTablaE() {
        Object[] columna = {"Marca", "Especie", "Nombre Científico", "Descripción"};
        DefaultTableModel modeloE = new DefaultTableModel(columna, 0);
        for (Especie e : especies) {
            short marca = e.getMarca();
            String especie = e.getNombreEspecie();
            String nombreC = e.getNombreCientifico();
            String descripcion = e.getDescripcion();
            Object[] fila = {marca, especie, nombreC, descripcion};
            modeloE.addRow(fila);
        }
        this.tablaE.setModel(modeloE);
    }

    public void cargarTablaC() {
        Object[] columna = {"ID", "Nombre", "Dirección", "Teléfono", "Ingreso"};
        DefaultTableModel modeloC = new DefaultTableModel(columna, 0);
        for (Cuidador c : cuidadores) {
            short id = c.getId();
            String nombre = c.getNombre();
            String direccion = c.getDireccion();
            String telefono = c.getTelefono();
            LocalDateTime fechaI = c.getFechInicioTrabajar();
            Object[] fila = {id, nombre, direccion, telefono, fechaI};
            modeloC.addRow(fila);
        }
        this.tablaC.setModel(modeloC);
    }

    public void cargarTablaH() {
        Object[] columna = {"ID", "Nombre", "Clima", "Vegetación", "Continente"};
        DefaultTableModel modeloH = new DefaultTableModel(columna, 0);
        for (Habitat h : habitats) {
            short id = h.getId();
            String nombre = h.getNombreHabitat();
            String clima = h.getClima();
            String vegetacion = h.getVegetacion();
            String continente = h.getContinente();
            Object[] fila = {id, nombre, clima, vegetacion, continente};
            modeloH.addRow(fila);
        }
        this.tablaH.setModel(modeloH);
    }

    public void cargarTablaZ() {
        Object[] columna = {"ID", "Nombre", "Extensión"};
        DefaultTableModel modeloZ = new DefaultTableModel(columna, 0);
        for (Zona z : zonas) {
            short id = z.getId();
            String nombre = z.getNombreZona();
            float extension = z.getExtension();
            Object[] fila = {id, nombre, extension};
            modeloZ.addRow(fila);
        }
        this.tablaH.setModel(modeloZ);
    }

    /**
     * Creates new form frmEspecieR
     */
    public frmEspecie() {
        initComponents();
        setLocationRelativeTo(null);
        cargarTablaE();
        cargarTablaC();
        cargarTablaH();
        cargarTablaZ();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        bActualizar = new javax.swing.JButton();
        jEspecie = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jNombreC = new javax.swing.JTextField();
        jMarca = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jDescripcion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaE = new javax.swing.JTable();
        bGuardar = new javax.swing.JButton();
        bOrdenar = new javax.swing.JButton();
        bEliminar = new javax.swing.JButton();
        rAscendente = new javax.swing.JRadioButton();
        rDescendente = new javax.swing.JRadioButton();
        cBox = new javax.swing.JComboBox<>();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaC = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaH = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaZ = new javax.swing.JTable();
        bGuardarT = new javax.swing.JButton();
        bEliminarT = new javax.swing.JButton();
        bOrdenarT = new javax.swing.JButton();
        rAscendenteT = new javax.swing.JRadioButton();
        rDescendenteT = new javax.swing.JRadioButton();
        cBoxT = new javax.swing.JComboBox<>();
        bCuidador = new javax.swing.JButton();
        bHabitat = new javax.swing.JButton();
        bZona = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setText("Especie");

        bActualizar.setText("Actualizar");
        bActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActualizarActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre Científico");

        jLabel3.setText("Marca");

        jLabel4.setText("Descripción");

        tablaE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaE);

        bGuardar.setText("Guardar");
        bGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarActionPerformed(evt);
            }
        });

        bOrdenar.setText("Ordenar");
        bOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOrdenarActionPerformed(evt);
            }
        });

        bEliminar.setText("Eliminar");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });

        buttonGroup1.add(rAscendente);
        rAscendente.setSelected(true);
        rAscendente.setText("Ascendente");

        buttonGroup1.add(rDescendente);
        rDescendente.setText("Descendente");

        cBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Especie", "Marca" }));

        tablaC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tablaC);

        jTabbedPane1.addTab("Cuidadores", jScrollPane2);

        tablaH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tablaH);

        jTabbedPane1.addTab("Habitats", jScrollPane3);

        tablaZ.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(tablaZ);

        jTabbedPane1.addTab("Zonas", jScrollPane4);

        bGuardarT.setText("Guardar");

        bEliminarT.setText("Eliminar");

        bOrdenarT.setText("Ordenar");

        buttonGroup2.add(rAscendenteT);
        rAscendenteT.setSelected(true);
        rAscendenteT.setText("Ascendente");

        buttonGroup2.add(rDescendenteT);
        rDescendenteT.setText("Descendente");

        cBoxT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "ID" }));

        bCuidador.setText("Ver Cuidador(es)");

        bHabitat.setText("Ver Habitat(s)");

        bZona.setText("Ver Zona(s)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(bOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(rAscendente)
                            .addGap(44, 44, 44)
                            .addComponent(rDescendente)
                            .addGap(18, 18, 18)
                            .addComponent(cBox, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(39, 39, 39))
                                .addComponent(jEspecie, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jMarca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jDescripcion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jNombreC, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bCuidador, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bHabitat, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bZona, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addComponent(jTabbedPane1)
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(bGuardarT, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(bEliminarT, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(bOrdenarT, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rAscendenteT)
                        .addGap(44, 44, 44)
                        .addComponent(rDescendenteT)
                        .addGap(18, 18, 18)
                        .addComponent(cBoxT, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bGuardar)
                    .addComponent(bGuardarT)
                    .addComponent(bEliminarT))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jNombreC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(bActualizar)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bOrdenarT)
                                    .addComponent(rAscendenteT)
                                    .addComponent(rDescendenteT)
                                    .addComponent(cBoxT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(bEliminar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bOrdenar)
                            .addComponent(rAscendente)
                            .addComponent(rDescendente)
                            .addComponent(cBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(bCuidador)
                .addGap(22, 22, 22)
                .addComponent(bHabitat)
                .addGap(27, 27, 27)
                .addComponent(bZona)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarActionPerformed
        // TODO add your handling code here:
        if (validarCamposE()) {
            JOptionPane.showMessageDialog(null, "Todos los campos de especie deben de estar llenos", "Error al guardar",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                etrs.guardar(new Especie(jEspecie.getText(), jNombreC.getText(), jDescripcion.getText(),
                        Short.parseShort(jMarca.getText())));
            } catch (MyExcepcion ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Error al Guardar", JOptionPane.ERROR_MESSAGE);
            } finally {
                cargarTablaE();
            }
        }
    }//GEN-LAST:event_bGuardarActionPerformed

    private void bActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActualizarActionPerformed
        // TODO add your handling code here:
        if (tablaE.getSelectedRow() > -1 & !validarCamposE()) {
            JOptionPane.showMessageDialog(null, "Solo la Marca no se puede actualizar",
                    "Aviso", JOptionPane.INFORMATION_MESSAGE);
            especies = (List<Especie>) etrs.listar();
            Especie especieV = especies.get(tablaE.getSelectedRow());
            try {
                etrs.actulizar(new Especie(jEspecie.getText(), jEspecie.getText(),
                        jDescripcion.getText(), especieV.getMarca()));
            } catch (MyExcepcion ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Error al actualizar",
                        JOptionPane.ERROR_MESSAGE);
            } finally {
                jNombreC.setText("");
                jDescripcion.setText("");
                jEspecie.setText("");
                jMarca.setText("");
                cargarTablaE();
            }
        }
    }//GEN-LAST:event_bActualizarActionPerformed

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        // TODO add your handling code here:
        if (tablaE.getSelectedRow() > -1) {
            List<Especie> especiesE = (List<Especie>) etrs.listar();
            try {
                etrs.eliminar(especiesE.get(tablaE.getSelectedRow()));
            } catch (MyExcepcion ex) {
                Logger.getLogger(frmEspecie.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                cargarTablaE();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe de seleccionar una fila a eliminar", "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bEliminarActionPerformed

    private void bOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOrdenarActionPerformed
        // TODO add your handling code here:
        if (cBox.getSelectedIndex() == 0) {
            Especie.bandera = false;
            if (rAscendente.isSelected()) {
                Collections.sort(especies);
            } else if (rDescendente.isSelected()) {
                Collections.sort(especies, Collections.reverseOrder());
            }
        } else if (cBox.getSelectedIndex() == 1) {
            Especie.bandera = true;
            if (rAscendente.isSelected()) {
                Collections.sort(especies, Collections.reverseOrder());
            } else if (rDescendente.isSelected()) {
                Collections.sort(especies);
            }
        }
        cargarTablaE();
    }//GEN-LAST:event_bOrdenarActionPerformed

    public boolean validarCamposE() {
        if (jEspecie.getText().isEmpty() | jDescripcion.getText().isEmpty()
                | jNombreC.getText().isEmpty() | jMarca.getText().isEmpty()) {
            return true;
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmEspecie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmEspecie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmEspecie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmEspecie.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmEspecie().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bActualizar;
    private javax.swing.JButton bCuidador;
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bEliminarT;
    private javax.swing.JButton bGuardar;
    private javax.swing.JButton bGuardarT;
    private javax.swing.JButton bHabitat;
    private javax.swing.JButton bOrdenar;
    private javax.swing.JButton bOrdenarT;
    private javax.swing.JButton bZona;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cBox;
    private javax.swing.JComboBox<String> cBoxT;
    private javax.swing.JTextField jDescripcion;
    private javax.swing.JTextField jEspecie;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jMarca;
    private javax.swing.JTextField jNombreC;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rAscendente;
    private javax.swing.JRadioButton rAscendenteT;
    private javax.swing.JRadioButton rDescendente;
    private javax.swing.JRadioButton rDescendenteT;
    private javax.swing.JTable tablaC;
    private javax.swing.JTable tablaE;
    private javax.swing.JTable tablaH;
    private javax.swing.JTable tablaZ;
    // End of variables declaration//GEN-END:variables
}
