/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zoolomania.funcional.vista;

import com.zoolomania.funcional.control.CuidadorTrs;
import com.zoolomania.funcional.control.MyExcepcion;
import com.zoolomania.funcional.modelo.Cuidador;
import com.zoolomania.funcional.modelo.Empleado;
import com.zoolomania.funcional.modelo.Especie;
import java.time.LocalDateTime;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Erick Díaz
 */
public class frmCuidador extends javax.swing.JFrame {

    CuidadorTrs ctrs = new CuidadorTrs();
    List<Cuidador> cuidadores = (List<Cuidador>) ctrs.listar();
    DefaultTableModel modeloC, modeloE;
    Cuidador cuidador;

    public void cargarTablaC() {
        Object[] columna = {"ID", "Nombre", "Dirección", "Teléfono", "Ingreso"};
        modeloC = new DefaultTableModel(columna, 0);
        for (Cuidador c : cuidadores) {
            short id = c.getId();
            String nombre = c.getNombre();
            String direccion = c.getDireccion();
            String telefono = c.getTelefono();
            LocalDateTime ingreso = c.getFechInicioTrabajar();
            Object[] fila = {id, nombre, direccion, telefono, ingreso};
            modeloC.addRow(fila);
        }
        this.tablaC.setModel(modeloC);
    }

    public void cargarTablaE(Cuidador cuidador) {
        Object[] columna = {"Marca", "Especie", "Nombre Científico", "Fecha de Cuidado", "Descripción"};
        modeloE = new DefaultTableModel(columna, 0);
        List<Especie> especies = cuidador.getEspecies();
        for (Especie e : especies) {
            short marca = e.getMarca();
            String especie = e.getNombreEspecie();
            String nombreC = e.getNombreCientifico();
            LocalDateTime fechaC = e.getFechaRegistrada();
            String descripcion = e.getDescripcion();
            Object[] fila = {marca, especie, nombreC, fechaC, descripcion};
            modeloE.addRow(fila);
        }
        this.tablaE.setModel(modeloE);
    }

    /**
     * Creates new form frmCuidador
     */
    public frmCuidador() {
        initComponents();
        setLocationRelativeTo(null);
        cargarTablaC();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaC = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaE = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jNombreC = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jDireccionC = new javax.swing.JTextField();
        jTelefonoC = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jIdC = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        bAgregar = new javax.swing.JButton();
        bEliminar = new javax.swing.JButton();
        bActualizar = new javax.swing.JButton();
        bOrdenar = new javax.swing.JButton();
        comboC = new javax.swing.JComboBox<>();
        rAscendente = new javax.swing.JRadioButton();
        rDescendente = new javax.swing.JRadioButton();
        bEspecie = new javax.swing.JButton();
        bAgregarE = new javax.swing.JButton();
        bOrdenar1 = new javax.swing.JButton();
        comboC1 = new javax.swing.JComboBox<>();
        bEliminarE = new javax.swing.JButton();
        bActualizarE = new javax.swing.JButton();
        rAscendente1 = new javax.swing.JRadioButton();
        rDescendente1 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        tablaC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaC);

        tablaE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tablaE);

        jLabel1.setText("Nombre");

        jLabel2.setText("Dirección");

        jLabel3.setText("Teléfono");

        jLabel4.setText("ID");

        jLabel6.setText("Especie");

        jLabel7.setText("Nombre Científico");

        jLabel8.setText("Marca");

        jLabel9.setText("Descripción");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        bAgregar.setText("Agregar ");
        bAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAgregarActionPerformed(evt);
            }
        });

        bEliminar.setText("Eliminar ");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });

        bActualizar.setText("Actualizar ");
        bActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActualizarActionPerformed(evt);
            }
        });

        bOrdenar.setText("Ordenar ");
        bOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOrdenarActionPerformed(evt);
            }
        });

        comboC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "ID" }));

        buttonGroup1.add(rAscendente);
        rAscendente.setText("Ascendente");

        buttonGroup1.add(rDescendente);
        rDescendente.setText("Descendente");

        bEspecie.setText("Ver Especie(s)");
        bEspecie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEspecieActionPerformed(evt);
            }
        });

        bAgregarE.setText("Agregar ");
        bAgregarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAgregarEActionPerformed(evt);
            }
        });

        bOrdenar1.setText("Ordenar ");

        comboC1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "ID" }));

        bEliminarE.setText("Eliminar ");

        bActualizarE.setText("Actualizar ");

        buttonGroup1.add(rAscendente1);
        rAscendente1.setText("Ascendente");

        buttonGroup1.add(rDescendente1);
        rDescendente1.setText("Descendente");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jNombreC, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTelefonoC, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jIdC, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jDireccionC, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(179, 179, 179))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bOrdenar1)
                                        .addGap(18, 18, 18)
                                        .addComponent(comboC1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(rAscendente1)
                                        .addGap(18, 18, 18)
                                        .addComponent(rDescendente1)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jScrollPane2)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bAgregarE)
                                        .addGap(18, 18, 18)
                                        .addComponent(bEliminarE)
                                        .addGap(18, 18, 18)
                                        .addComponent(bActualizarE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(65, 65, 65)
                                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(65, 65, 65)
                                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(38, 38, 38)
                                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(22, 22, 22)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bAgregar)
                                .addGap(18, 18, 18)
                                .addComponent(bEliminar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bOrdenar)
                                .addGap(18, 18, 18)
                                .addComponent(comboC, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bActualizar)
                                .addGap(18, 18, 18)
                                .addComponent(bEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rAscendente)
                                .addGap(18, 18, 18)
                                .addComponent(rDescendente)))
                        .addContainerGap(872, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jNombreC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDireccionC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTelefonoC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jIdC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bAgregar)
                            .addComponent(bEliminar)
                            .addComponent(bActualizar)
                            .addComponent(bEspecie))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bOrdenar)
                            .addComponent(comboC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rAscendente)
                            .addComponent(rDescendente))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bAgregarE)
                            .addComponent(bEliminarE)
                            .addComponent(bActualizarE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bOrdenar1)
                            .addComponent(comboC1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rAscendente1)
                            .addComponent(rDescendente1))
                        .addGap(7, 7, 7)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAgregarActionPerformed
        // TODO add your handling code here:
        if (validarCampos()) {
            JOptionPane.showMessageDialog(null, "Exiten campos sin llenar, revise de nuevo", "Registro Denegado", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                System.out.println(ctrs.guardar(new Cuidador(jNombreC.getText(), jDireccionC.getText(),
                        jTelefonoC.getText(), Short.parseShort(jIdC.getText()))));
            } catch (MyExcepcion ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Error al Guardar", JOptionPane.ERROR_MESSAGE);
            } finally {
                jNombreC.setText("");
                jDireccionC.setText("");
                jTelefonoC.setText("");
                jIdC.setText("");
                cargarTablaC();
            }
        }
    }//GEN-LAST:event_bAgregarActionPerformed

    private void bEspecieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEspecieActionPerformed
        // TODO add your handling code here:
        if (tablaC.getSelectedRow() > -1) {
            cargarTablaE(cuidadores.get(tablaC.getSelectedRow()));
        } else {
            JOptionPane.showMessageDialog(null, "Debe de seleccionar una fila", "Error al mostrar", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_bEspecieActionPerformed

    private void bAgregarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAgregarEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bAgregarEActionPerformed

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        // TODO add your handling code here:
        if (tablaC.getSelectedRow() < -1) {
            JOptionPane.showMessageDialog(null, "Debe de seleccionar una fila", "Error al mostrar", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                System.out.println(ctrs.eliminar(cuidadores.get(tablaC.getSelectedRow())));
                modeloC.removeRow(tablaC.getSelectedRow()); //No olvidarse de poner esta linea pues salta error al eliminar si no está
            } catch (MyExcepcion ex) {
                Logger.getLogger(frmCuidador.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_bEliminarActionPerformed

    private void bActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActualizarActionPerformed
        // TODO add your handling code here:
        if (tablaC.getSelectedRow() > -1) {
            JOptionPane.showMessageDialog(null, "Solo se puede actualizar la dirección y el teléfono", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            cuidador = cuidadores.get(tablaC.getSelectedRow());
            try {
                System.out.println(ctrs.actulizar(new Cuidador(cuidador.getNombre(), jDireccionC.getText(), jTelefonoC.getText(), cuidador.getId())));
            } catch (MyExcepcion ex) {
                Logger.getLogger(frmCuidador.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                cargarTablaC();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe de seleccionar una fila", "Error al mostrar", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bActualizarActionPerformed

    private void bOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOrdenarActionPerformed
        // TODO add your handling code here:
        if (comboC.getSelectedIndex() == 0) {
            Empleado.bandera = false;
            if (rAscendente.isSelected()) {
                Collections.sort(cuidadores);
            } else if (rDescendente.isSelected()) {
                Collections.sort(cuidadores, Collections.reverseOrder());
            }
        } else if (comboC.getSelectedIndex() == 1) {
            cuidador.bandera = true;
            if (rAscendente.isSelected()) {
                Collections.sort(cuidadores, Collections.reverseOrder());
            } else if (rDescendente.isSelected()) {
                Collections.sort(cuidadores);
            }
        }
        cargarTablaC();
    }//GEN-LAST:event_bOrdenarActionPerformed

    public boolean validarCampos() {
        if (jNombreC.getText().isEmpty() | jTelefonoC.getText().isEmpty()
                | jDireccionC.getText().isEmpty() | jIdC.getText().isEmpty()) {
            return true;
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCuidador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCuidador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCuidador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCuidador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCuidador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bActualizar;
    private javax.swing.JButton bActualizarE;
    private javax.swing.JButton bAgregar;
    private javax.swing.JButton bAgregarE;
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bEliminarE;
    private javax.swing.JButton bEspecie;
    private javax.swing.JButton bOrdenar;
    private javax.swing.JButton bOrdenar1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> comboC;
    private javax.swing.JComboBox<String> comboC1;
    private javax.swing.JTextField jDireccionC;
    private javax.swing.JTextField jIdC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jNombreC;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTelefonoC;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JRadioButton rAscendente;
    private javax.swing.JRadioButton rAscendente1;
    private javax.swing.JRadioButton rDescendente;
    private javax.swing.JRadioButton rDescendente1;
    private javax.swing.JTable tablaC;
    private javax.swing.JTable tablaE;
    // End of variables declaration//GEN-END:variables
}
